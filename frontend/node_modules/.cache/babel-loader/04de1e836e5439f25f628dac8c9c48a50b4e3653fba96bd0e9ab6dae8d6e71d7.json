{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/wishlists';\n\n// Add Item to Wishlist\nexport const addItemToWishlist = async (userId, productId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/`, {\n      userId,\n      productId\n    });\n    if (response.data.success) {\n      return {\n        success: true,\n        wishlist: response.data.wishlist,\n        message: response.data.message\n      };\n    }\n    throw new Error(response.data.error || \"Failed to add to wishlist\");\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return {\n      success: false,\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || \"Failed to add to wishlist\"\n    };\n  }\n};\n\n// Get Wishlist\nexport const getWishlist = async userId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/${userId}`);\n    if (response.data.success) {\n      return {\n        success: true,\n        items: response.data.items || [],\n        wishlist: response.data.wishlist || {\n          items: []\n        }\n      };\n    }\n    throw new Error(response.data.error || \"Failed to fetch wishlist\");\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return {\n      success: false,\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || \"Failed to fetch wishlist\",\n      items: []\n    };\n  }\n};\n\n// Remove Item from Wishlist\nexport const removeFromWishlist = async (userId, productId) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${userId}/${productId}`);\n    if (response.data.success) {\n      return {\n        success: true,\n        wishlist: response.data.wishlist,\n        message: response.data.message\n      };\n    }\n    throw new Error(response.data.error || \"Failed to remove from wishlist\");\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return {\n      success: false,\n      error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || \"Failed to remove from wishlist\"\n    };\n  }\n};\n\n// Move Item to Cart\nexport const moveToCart = async (userId, productId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/move-to-cart/${userId}`, {\n      productId\n    });\n    if (response.data.success) {\n      return {\n        success: true,\n        wishlist: response.data.wishlist,\n        message: response.data.message\n      };\n    }\n    throw new Error(response.data.error || \"Failed to move to cart\");\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return {\n      success: false,\n      error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || error.message || \"Failed to move to cart\"\n    };\n  }\n};\n\n// Clear Wishlist\nexport const clearWishlist = async userId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${userId}/clear`);\n    if (response.data.success) {\n      return {\n        success: true,\n        wishlist: response.data.wishlist,\n        message: response.data.message\n      };\n    }\n    throw new Error(response.data.error || \"Failed to clear wishlist\");\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return {\n      success: false,\n      error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || error.message || \"Failed to clear wishlist\"\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","addItemToWishlist","userId","productId","response","post","data","success","wishlist","message","Error","error","_error$response","_error$response$data","getWishlist","get","items","_error$response2","_error$response2$data","removeFromWishlist","delete","_error$response3","_error$response3$data","moveToCart","_error$response4","_error$response4$data","clearWishlist","_error$response5","_error$response5$data"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Services/wishlistService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/wishlists';\r\n\r\n// Add Item to Wishlist\r\nexport const addItemToWishlist = async (userId, productId) => {\r\n    try {\r\n        const response = await axios.post(`${API_BASE_URL}/`, { userId, productId });\r\n        if (response.data.success) {\r\n            return {\r\n                success: true,\r\n                wishlist: response.data.wishlist,\r\n                message: response.data.message\r\n            };\r\n        }\r\n        throw new Error(response.data.error || \"Failed to add to wishlist\");\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || \"Failed to add to wishlist\"\r\n        };\r\n    }\r\n};\r\n\r\n// Get Wishlist\r\nexport const getWishlist = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/${userId}`);\r\n        if (response.data.success) {\r\n            return {\r\n                success: true,\r\n                items: response.data.items || [],\r\n                wishlist: response.data.wishlist || { items: [] }\r\n            };\r\n        }\r\n        throw new Error(response.data.error || \"Failed to fetch wishlist\");\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || \"Failed to fetch wishlist\",\r\n            items: []\r\n        };\r\n    }\r\n};\r\n\r\n// Remove Item from Wishlist\r\nexport const removeFromWishlist = async (userId, productId) => {\r\n    try {\r\n        const response = await axios.delete(`${API_BASE_URL}/${userId}/${productId}`);\r\n        if (response.data.success) {\r\n            return {\r\n                success: true,\r\n                wishlist: response.data.wishlist,\r\n                message: response.data.message\r\n            };\r\n        }\r\n        throw new Error(response.data.error || \"Failed to remove from wishlist\");\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || \"Failed to remove from wishlist\"\r\n        };\r\n    }\r\n};\r\n\r\n// Move Item to Cart\r\nexport const moveToCart = async (userId, productId) => {\r\n    try {\r\n        const response = await axios.post(`${API_BASE_URL}/move-to-cart/${userId}`, { productId });\r\n        if (response.data.success) {\r\n            return {\r\n                success: true,\r\n                wishlist: response.data.wishlist,\r\n                message: response.data.message\r\n            };\r\n        }\r\n        throw new Error(response.data.error || \"Failed to move to cart\");\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || \"Failed to move to cart\"\r\n        };\r\n    }\r\n};\r\n\r\n// Clear Wishlist\r\nexport const clearWishlist = async (userId) => {\r\n    try {\r\n        const response = await axios.delete(`${API_BASE_URL}/${userId}/clear`);\r\n        if (response.data.success) {\r\n            return {\r\n                success: true,\r\n                wishlist: response.data.wishlist,\r\n                message: response.data.message\r\n            };\r\n        }\r\n        throw new Error(response.data.error || \"Failed to clear wishlist\");\r\n    } catch (error) {\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || \"Failed to clear wishlist\"\r\n        };\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}