{"ast":null,"code":"var _jsxFileName = \"E:\\\\SLIT\\\\Y2S2\\\\ITProject\\\\frontend\\\\src\\\\Pages\\\\Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAllOrders, updateOrderStatus } from \"../services/orderService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const orders = await getAllOrders();\n      setOrders(orders);\n    };\n    fetchOrders();\n  }, []);\n  const handleUpdateStatus = async (orderId, status) => {\n    await updateOrderStatus(orderId, status);\n    const updatedOrders = orders.map(order => order._id === orderId ? {\n      ...order,\n      status\n    } : order);\n    setOrders(updatedOrders);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Order ID: \", order._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User: \", order.userId.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Amount: $\", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: order.status,\n        onChange: e => handleUpdateStatus(order._id, e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Processing\",\n          children: \"Processing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shipped\",\n          children: \"Shipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Delivered\",\n          children: \"Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Cancelled\",\n          children: \"Cancelled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, order._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","getAllOrders","updateOrderStatus","jsxDEV","_jsxDEV","Admin","_s","orders","setOrders","fetchOrders","handleUpdateStatus","orderId","status","updatedOrders","map","order","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","userId","name","totalAmount","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Pages/Admin.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAllOrders, updateOrderStatus } from \"../services/orderService\";\r\n\r\nconst Admin = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      const orders = await getAllOrders();\r\n      setOrders(orders);\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleUpdateStatus = async (orderId, status) => {\r\n    await updateOrderStatus(orderId, status);\r\n    const updatedOrders = orders.map((order) =>\r\n      order._id === orderId ? { ...order, status } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      {orders.map((order) => (\r\n        <div key={order._id}>\r\n          <h3>Order ID: {order._id}</h3>\r\n          <p>User: {order.userId.name}</p>\r\n          <p>Total Amount: ${order.totalAmount}</p>\r\n          <p>Status: {order.status}</p>\r\n          <select\r\n            value={order.status}\r\n            onChange={(e) => handleUpdateStatus(order._id, e.target.value)}\r\n          >\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"Processing\">Processing</option>\r\n            <option value=\"Shipped\">Shipped</option>\r\n            <option value=\"Delivered\">Delivered</option>\r\n            <option value=\"Cancelled\">Cancelled</option>\r\n          </select>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}