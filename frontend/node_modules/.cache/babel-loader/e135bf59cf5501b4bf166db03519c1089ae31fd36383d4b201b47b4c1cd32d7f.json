{"ast":null,"code":"import api from '../utils/api';\n\n// Register user\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n      throw new Error('User already exists');\n    }\n    throw new Error('Registration failed. Please try again.');\n  }\n};\n\n// Get all users (admin only)\nexport const getAllUsers = async () => {\n  try {\n    const response = await api.get('/users');\n    return response.data.users;\n  } catch (error) {\n    var _error$response2, _error$response3;\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n      throw new Error('Session expired. Please log in again.');\n    } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n      throw new Error('Admin privileges required');\n    }\n    throw new Error('Failed to fetch users');\n  }\n};\n\n// Add a new user (admin only)\nexport const addUser = async userData => {\n  try {\n    const response = await api.post('/users', userData);\n    return response.data.user;\n  } catch (error) {\n    var _error$response4, _error$response5;\n    if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n      throw new Error('Session expired. Please log in again.');\n    } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 403) {\n      throw new Error('Admin privileges required');\n    }\n    throw new Error('Failed to add user');\n  }\n};\n\n// Get user by ID\nexport const getUserById = async id => {\n  try {\n    const response = await api.get(`/users/${id}`);\n    return response.data.user;\n  } catch (error) {\n    var _error$response6, _error$response7;\n    if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401) {\n      throw new Error('Session expired. Please log in again.');\n    } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n      throw new Error('Unauthorized access');\n    }\n    throw new Error('Failed to fetch user');\n  }\n};\n\n// Update user\nexport const updateUser = async (id, userData) => {\n  try {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data.user;\n  } catch (error) {\n    var _error$response8, _error$response9;\n    if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401) {\n      throw new Error('Session expired. Please log in again.');\n    } else if (((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) === 403) {\n      throw new Error('Unauthorized access');\n    }\n    throw new Error('Failed to update user');\n  }\n};\n\n// Delete user (admin only)\nexport const deleteUser = async id => {\n  try {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response10, _error$response11;\n    if (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status) === 401) {\n      throw new Error('Session expired. Please log in again.');\n    } else if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 403) {\n      throw new Error('Admin privileges required');\n    }\n    throw new Error('Failed to delete user');\n  }\n};","map":{"version":3,"names":["api","registerUser","userData","response","post","data","error","_error$response","status","Error","getAllUsers","get","users","_error$response2","_error$response3","addUser","user","_error$response4","_error$response5","getUserById","id","_error$response6","_error$response7","updateUser","put","_error$response8","_error$response9","deleteUser","delete","_error$response10","_error$response11"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Services/userService.js"],"sourcesContent":["import api from '../utils/api';\r\n\r\n// Register user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response?.status === 400) {\r\n      throw new Error('User already exists');\r\n    }\r\n    throw new Error('Registration failed. Please try again.');\r\n  }\r\n};\r\n\r\n// Get all users (admin only)\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const response = await api.get('/users');\r\n    return response.data.users;\r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      throw new Error('Session expired. Please log in again.');\r\n    } else if (error.response?.status === 403) {\r\n      throw new Error('Admin privileges required');\r\n    }\r\n    throw new Error('Failed to fetch users');\r\n  }\r\n};\r\n\r\n// Add a new user (admin only)\r\nexport const addUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('/users', userData);\r\n    return response.data.user;\r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      throw new Error('Session expired. Please log in again.');\r\n    } else if (error.response?.status === 403) {\r\n      throw new Error('Admin privileges required');\r\n    }\r\n    throw new Error('Failed to add user');\r\n  }\r\n};\r\n\r\n// Get user by ID\r\nexport const getUserById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/users/${id}`);\r\n    return response.data.user;\r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      throw new Error('Session expired. Please log in again.');\r\n    } else if (error.response?.status === 403) {\r\n      throw new Error('Unauthorized access');\r\n    }\r\n    throw new Error('Failed to fetch user');\r\n  }\r\n};\r\n\r\n// Update user\r\nexport const updateUser = async (id, userData) => {\r\n  try {\r\n    const response = await api.put(`/users/${id}`, userData);\r\n    return response.data.user;\r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      throw new Error('Session expired. Please log in again.');\r\n    } else if (error.response?.status === 403) {\r\n      throw new Error('Unauthorized access');\r\n    }\r\n    throw new Error('Failed to update user');\r\n  }\r\n};\r\n\r\n// Delete user (admin only)\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/users/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      throw new Error('Session expired. Please log in again.');\r\n    } else if (error.response?.status === 403) {\r\n      throw new Error('Admin privileges required');\r\n    }\r\n    throw new Error('Failed to delete user');\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}