{"ast":null,"code":"var _jsxFileName = \"E:\\\\SLIT\\\\Y2S2\\\\ITProject\\\\frontend\\\\src\\\\Pages\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../Context/AuthContext\";\nimport api from \"../utils/api\"; // Changed from axios to our custom api\nimport \"./Checkout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [cart, setCart] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    name: (user === null || user === void 0 ? void 0 : user.name) || \"\",\n    email: (user === null || user === void 0 ? void 0 : user.email) || \"\",\n    address: \"\",\n    city: \"\",\n    postalCode: \"\",\n    paymentMethod: \"cashOnDelivery\"\n  });\n\n  // Fetch cart data\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await api.get(`/cart/${user._id}`); // Changed to api\n        setCart(response.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load cart');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user) {\n      fetchCart();\n    }\n  }, [user]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const orderData = {\n        userId: user._id,\n        items: cart.items,\n        shippingAddress: {\n          address: formData.address,\n          city: formData.city,\n          postalCode: formData.postalCode\n        },\n        paymentMethod: formData.paymentMethod\n      };\n\n      // Create order using api instead of axios\n      const response = await api.post('/orders', orderData);\n\n      // Clear cart using api instead of axios\n      await api.delete(`/cart/${user._id}/clear`);\n\n      // Redirect to order confirmation\n      navigate(`/order-confirmation/${response.data._id}`);\n    } catch (error) {\n      var _error$response2;\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        setError('Session expired. Please login again.');\n      } else {\n        var _error$response3, _error$response3$data;\n        setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Checkout failed. Please try again.');\n      }\n    }\n  };\n\n  // ... rest of your component remains the same ...\n  // Keep all the JSX and rendering logic exactly as is\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"zBK7zCHysuaya2s4WoNWB5toYGU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","api","jsxDEV","_jsxDEV","Checkout","_s","user","navigate","cart","setCart","loading","setLoading","error","setError","formData","setFormData","name","email","address","city","postalCode","paymentMethod","fetchCart","response","get","_id","data","_error$response","_error$response$data","message","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","orderData","userId","items","shippingAddress","post","delete","_error$response2","status","_error$response3","_error$response3$data","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Pages/Checkout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\nimport api from \"../utils/api\"; // Changed from axios to our custom api\r\nimport \"./Checkout.css\";\r\n\r\nconst Checkout = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [cart, setCart] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    postalCode: \"\",\r\n    paymentMethod: \"cashOnDelivery\"\r\n  });\r\n\r\n  // Fetch cart data\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      try {\r\n        const response = await api.get(`/cart/${user._id}`); // Changed to api\r\n        setCart(response.data);\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || 'Failed to load cart');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user) {\r\n      fetchCart();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const orderData = {\r\n        userId: user._id,\r\n        items: cart.items,\r\n        shippingAddress: {\r\n          address: formData.address,\r\n          city: formData.city,\r\n          postalCode: formData.postalCode\r\n        },\r\n        paymentMethod: formData.paymentMethod\r\n      };\r\n\r\n      // Create order using api instead of axios\r\n      const response = await api.post('/orders', orderData);\r\n      \r\n      // Clear cart using api instead of axios\r\n      await api.delete(`/cart/${user._id}/clear`);\r\n      \r\n      // Redirect to order confirmation\r\n      navigate(`/order-confirmation/${response.data._id}`);\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        setError('Session expired. Please login again.');\r\n      } else {\r\n        setError(error.response?.data?.message || 'Checkout failed. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // ... rest of your component remains the same ...\r\n  // Keep all the JSX and rendering logic exactly as is\r\n\r\n  return (\r\n    <div className=\"checkout-container\">\r\n      {/* Your existing JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}