{"ast":null,"code":"var _jsxFileName = \"E:\\\\SLIT\\\\Y2S2\\\\ITProject\\\\frontend\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated\n  const isAuthenticated = !!token;\n\n  // Initialize user data from localStorage and validate token\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem(\"token\");\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedToken && storedUser) {\n        try {\n          // Verify token with backend\n          const response = await axios.get(\"http://localhost:5000/auth/validate\", {\n            headers: {\n              Authorization: `Bearer ${storedToken}`\n            }\n          });\n\n          // If token is valid, set user and token\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n        } catch (error) {\n          // If token is invalid, clear storage\n          console.error(\"Token validation failed:\", error);\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"user\");\n          localStorage.removeItem(\"userId\");\n        }\n      }\n      setIsLoading(false);\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post(\"http://localhost:5000/auth/login\", {\n        email,\n        password\n      });\n\n      // Save token and user data\n      const {\n        token,\n        user\n      } = response.data;\n      setToken(token);\n      setUser(user);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"userId\", user._id);\n\n      // Set default axios authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Redirect based on role\n      if (user.role === \"Admin\") {\n        navigate(\"/admin-dashboard\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred\");\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post(\"http://localhost:5000/auth/register\", userData);\n\n      // Save token and user data\n      const {\n        token,\n        user\n      } = response.data;\n      setToken(token);\n      setUser(user);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"userId\", user._id);\n\n      // Set default axios authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Redirect based on role\n      if (user.role === \"Admin\") {\n        navigate(\"/admin-dashboard\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration failed:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"An error occurred\");\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userId\");\n\n    // Remove axios authorization header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Redirect to home page\n    navigate(\"/\");\n  };\n\n  // Update user function\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      isLoading,\n      isAuthenticated,\n      login,\n      register,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"vDY/VAXSgBbkkHWY5H8mldMxoPA=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isLoading","setIsLoading","navigate","isAuthenticated","initializeAuth","storedToken","storedUser","response","get","headers","Authorization","JSON","parse","error","console","removeItem","login","email","password","post","data","setItem","stringify","_id","defaults","common","role","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","updateUser","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    // Check if the user is authenticated\r\n    const isAuthenticated = !!token;\r\n\r\n    // Initialize user data from localStorage and validate token\r\n    useEffect(() => {\r\n        const initializeAuth = async () => {\r\n            const storedToken = localStorage.getItem(\"token\");\r\n            const storedUser = localStorage.getItem(\"user\");\r\n\r\n            if (storedToken && storedUser) {\r\n                try {\r\n                    // Verify token with backend\r\n                    const response = await axios.get(\"http://localhost:5000/auth/validate\", {\r\n                        headers: {\r\n                            Authorization: `Bearer ${storedToken}`\r\n                        }\r\n                    });\r\n\r\n                    // If token is valid, set user and token\r\n                    setToken(storedToken);\r\n                    setUser(JSON.parse(storedUser));\r\n                } catch (error) {\r\n                    // If token is invalid, clear storage\r\n                    console.error(\"Token validation failed:\", error);\r\n                    localStorage.removeItem(\"token\");\r\n                    localStorage.removeItem(\"user\");\r\n                    localStorage.removeItem(\"userId\");\r\n                }\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n\r\n        initializeAuth();\r\n    }, []);\r\n\r\n    // Login function\r\n    const login = async (email, password) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await axios.post(\"http://localhost:5000/auth/login\", {\r\n                email,\r\n                password,\r\n            });\r\n\r\n            // Save token and user data\r\n            const { token, user } = response.data;\r\n            setToken(token);\r\n            setUser(user);\r\n            \r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            localStorage.setItem(\"userId\", user._id);\r\n\r\n            // Set default axios authorization header\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n            // Redirect based on role\r\n            if (user.role === \"Admin\") {\r\n                navigate(\"/admin-dashboard\");\r\n            } else {\r\n                navigate(\"/dashboard\");\r\n            }\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Login failed:\", error.response?.data?.message || \"An error occurred\");\r\n            throw error;\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Register function\r\n    const register = async (userData) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await axios.post(\"http://localhost:5000/auth/register\", userData);\r\n\r\n            // Save token and user data\r\n            const { token, user } = response.data;\r\n            setToken(token);\r\n            setUser(user);\r\n            \r\n            localStorage.setItem(\"token\", token);\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            localStorage.setItem(\"userId\", user._id);\r\n\r\n            // Set default axios authorization header\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n            // Redirect based on role\r\n            if (user.role === \"Admin\") {\r\n                navigate(\"/admin-dashboard\");\r\n            } else {\r\n                navigate(\"/dashboard\");\r\n            }\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            console.error(\"Registration failed:\", error.response?.data?.message || \"An error occurred\");\r\n            throw error;\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setToken(null);\r\n        setUser(null);\r\n        \r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"userId\");\r\n        \r\n        // Remove axios authorization header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        // Redirect to home page\r\n        navigate(\"/\");\r\n    };\r\n\r\n    // Update user function\r\n    const updateUser = (updatedUser) => {\r\n        setUser(updatedUser);\r\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            token, \r\n            isLoading,\r\n            isAuthenticated, \r\n            login, \r\n            register, \r\n            logout,\r\n            updateUser\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => React.useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}