{"ast":null,"code":"import api from './api'; // Using the configured axios instance with interceptors\n\nconst API_BASE_URL = '/wishlists'; // Relative path since baseURL is set in api.js\n\n/**\r\n * Add item to user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to add\r\n * @returns {Promise<Object>} Response data\r\n */\nexport const addItemToWishlist = async (userId, productId) => {\n  try {\n    const response = await api.post(`${API_BASE_URL}/add`, {\n      userId,\n      productId\n    });\n    return {\n      success: true,\n      wishlist: response.data.wishlist,\n      message: response.data.message || 'Product added to wishlist'\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Error adding to wishlist:', error);\n    return {\n      success: false,\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || 'Failed to add to wishlist'\n    };\n  }\n};\n\n/**\r\n * Get user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @returns {Promise<Object>} Response data with wishlist items\r\n */\nexport const getWishlist = async userId => {\n  try {\n    const response = await api.get(`${API_BASE_URL}/user/${userId}`);\n    return {\n      success: true,\n      items: response.data.items || [],\n      wishlist: response.data.wishlist || {\n        items: []\n      }\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error fetching wishlist:', error);\n    return {\n      success: false,\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || 'Failed to fetch wishlist',\n      items: []\n    };\n  }\n};\n\n/**\r\n * Remove item from wishlist\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to remove\r\n * @returns {Promise<Object>} Response data\r\n */\nexport const removeFromWishlist = async (userId, productId) => {\n  try {\n    const response = await api.delete(`${API_BASE_URL}/remove/${userId}/${productId}`);\n    return {\n      success: true,\n      wishlist: response.data.wishlist,\n      message: response.data.message || 'Item removed from wishlist'\n    };\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    console.error('Error removing from wishlist:', error);\n    return {\n      success: false,\n      error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || 'Failed to remove from wishlist'\n    };\n  }\n};\n\n/**\r\n * Move item from wishlist to cart\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to move\r\n * @returns {Promise<Object>} Response data\r\n */\nexport const moveToCart = async (userId, productId) => {\n  try {\n    const response = await api.post(`${API_BASE_URL}/move-to-cart/${userId}`, {\n      productId\n    });\n    return {\n      success: true,\n      wishlist: response.data.wishlist,\n      message: response.data.message || 'Item moved to cart'\n    };\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    console.error('Error moving to cart:', error);\n    return {\n      success: false,\n      error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || error.message || 'Failed to move to cart'\n    };\n  }\n};\n\n/**\r\n * Clear user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @returns {Promise<Object>} Response data\r\n */\nexport const clearWishlist = async userId => {\n  try {\n    const response = await api.delete(`${API_BASE_URL}/clear/${userId}`);\n    return {\n      success: true,\n      wishlist: response.data.wishlist,\n      message: response.data.message || 'Wishlist cleared'\n    };\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    console.error('Error clearing wishlist:', error);\n    return {\n      success: false,\n      error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || error.message || 'Failed to clear wishlist'\n    };\n  }\n};","map":{"version":3,"names":["api","API_BASE_URL","addItemToWishlist","userId","productId","response","post","success","wishlist","data","message","error","_error$response","_error$response$data","console","getWishlist","get","items","_error$response2","_error$response2$data","removeFromWishlist","delete","_error$response3","_error$response3$data","moveToCart","_error$response4","_error$response4$data","clearWishlist","_error$response5","_error$response5$data"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Services/wishlistService.js"],"sourcesContent":["import api from './api'; // Using the configured axios instance with interceptors\r\n\r\nconst API_BASE_URL = '/wishlists'; // Relative path since baseURL is set in api.js\r\n\r\n/**\r\n * Add item to user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to add\r\n * @returns {Promise<Object>} Response data\r\n */\r\nexport const addItemToWishlist = async (userId, productId) => {\r\n    try {\r\n        const response = await api.post(`${API_BASE_URL}/add`, { \r\n            userId, \r\n            productId \r\n        });\r\n        return {\r\n            success: true,\r\n            wishlist: response.data.wishlist,\r\n            message: response.data.message || 'Product added to wishlist'\r\n        };\r\n    } catch (error) {\r\n        console.error('Error adding to wishlist:', error);\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || 'Failed to add to wishlist'\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Get user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @returns {Promise<Object>} Response data with wishlist items\r\n */\r\nexport const getWishlist = async (userId) => {\r\n    try {\r\n        const response = await api.get(`${API_BASE_URL}/user/${userId}`);\r\n        return {\r\n            success: true,\r\n            items: response.data.items || [],\r\n            wishlist: response.data.wishlist || { items: [] }\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching wishlist:', error);\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || 'Failed to fetch wishlist',\r\n            items: []\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Remove item from wishlist\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to remove\r\n * @returns {Promise<Object>} Response data\r\n */\r\nexport const removeFromWishlist = async (userId, productId) => {\r\n    try {\r\n        const response = await api.delete(`${API_BASE_URL}/remove/${userId}/${productId}`);\r\n        return {\r\n            success: true,\r\n            wishlist: response.data.wishlist,\r\n            message: response.data.message || 'Item removed from wishlist'\r\n        };\r\n    } catch (error) {\r\n        console.error('Error removing from wishlist:', error);\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || 'Failed to remove from wishlist'\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Move item from wishlist to cart\r\n * @param {string} userId - ID of the user\r\n * @param {string} productId - ID of the product to move\r\n * @returns {Promise<Object>} Response data\r\n */\r\nexport const moveToCart = async (userId, productId) => {\r\n    try {\r\n        const response = await api.post(`${API_BASE_URL}/move-to-cart/${userId}`, { \r\n            productId \r\n        });\r\n        return {\r\n            success: true,\r\n            wishlist: response.data.wishlist,\r\n            message: response.data.message || 'Item moved to cart'\r\n        };\r\n    } catch (error) {\r\n        console.error('Error moving to cart:', error);\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || 'Failed to move to cart'\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Clear user's wishlist\r\n * @param {string} userId - ID of the user\r\n * @returns {Promise<Object>} Response data\r\n */\r\nexport const clearWishlist = async (userId) => {\r\n    try {\r\n        const response = await api.delete(`${API_BASE_URL}/clear/${userId}`);\r\n        return {\r\n            success: true,\r\n            wishlist: response.data.wishlist,\r\n            message: response.data.message || 'Wishlist cleared'\r\n        };\r\n    } catch (error) {\r\n        console.error('Error clearing wishlist:', error);\r\n        return {\r\n            success: false,\r\n            error: error.response?.data?.error || error.message || 'Failed to clear wishlist'\r\n        };\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}