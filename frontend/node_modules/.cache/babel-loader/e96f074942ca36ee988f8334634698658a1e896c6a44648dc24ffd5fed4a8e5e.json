{"ast":null,"code":"var _jsxFileName = \"E:\\\\SLIT\\\\Y2S2\\\\ITProject\\\\frontend\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children,\n  userId\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Memoize fetchCart with useCallback\n  const fetchCart = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/cart/${userId}`);\n      setCart(response.data.items || []);\n      setError(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to load cart');\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]); // userId is a dependency\n\n  // Fetch cart when userId or fetchCart changes\n  useEffect(() => {\n    if (userId) {\n      fetchCart();\n    }\n  }, [userId, fetchCart]); // Now properly includes all dependencies\n\n  const syncWithBackend = async updatedCart => {\n    try {\n      await axios.put(`/cart/${userId}`, {\n        items: updatedCart\n      });\n    } catch (err) {\n      console.error(\"Failed to sync cart with backend:\", err);\n      throw err;\n    }\n  };\n  const addToCart = async item => {\n    try {\n      setLoading(true);\n      const updatedCart = [...cart];\n      const existingItem = updatedCart.find(cartItem => cartItem.productId === item.productId);\n      if (existingItem) {\n        existingItem.quantity += item.quantity;\n      } else {\n        updatedCart.push(item);\n      }\n      await syncWithBackend(updatedCart);\n      setCart(updatedCart);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to add item');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      setLoading(true);\n      const updatedCart = cart.filter(item => item.productId !== productId);\n      await syncWithBackend(updatedCart);\n      setCart(updatedCart);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Failed to remove item');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateQuantity = async (productId, newQuantity) => {\n    try {\n      setLoading(true);\n      const updatedCart = cart.map(item => item.productId === productId ? {\n        ...item,\n        quantity: newQuantity\n      } : item);\n      await syncWithBackend(updatedCart);\n      setCart(updatedCart);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Failed to update quantity');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearCart = async () => {\n    try {\n      setLoading(true);\n      await axios.delete(`/cart/clear/${userId}`);\n      setCart([]);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.error) || 'Failed to clear cart');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const cartTotal = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  const cartCount = cart.reduce((count, item) => count + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      cartTotal,\n      cartCount,\n      loading,\n      error,\n      fetchCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"hG/iDmcq09kn9G5+O06XS1aneLc=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CartContext","CartProvider","children","userId","_s","cart","setCart","loading","setLoading","error","setError","fetchCart","response","get","data","items","err","_err$response","_err$response$data","syncWithBackend","updatedCart","put","console","addToCart","item","existingItem","find","cartItem","productId","quantity","push","_err$response2","_err$response2$data","removeFromCart","filter","_err$response3","_err$response3$data","updateQuantity","newQuantity","map","_err$response4","_err$response4$data","clearCart","delete","_err$response5","_err$response5$data","cartTotal","reduce","total","price","cartCount","count","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children, userId }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Memoize fetchCart with useCallback\r\n  const fetchCart = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`/cart/${userId}`);\r\n      setCart(response.data.items || []);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to load cart');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userId]); // userId is a dependency\r\n\r\n  // Fetch cart when userId or fetchCart changes\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchCart();\r\n    }\r\n  }, [userId, fetchCart]); // Now properly includes all dependencies\r\n\r\n  const syncWithBackend = async (updatedCart) => {\r\n    try {\r\n      await axios.put(`/cart/${userId}`, { items: updatedCart });\r\n    } catch (err) {\r\n      console.error(\"Failed to sync cart with backend:\", err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      setLoading(true);\r\n      const updatedCart = [...cart];\r\n      const existingItem = updatedCart.find(cartItem => cartItem.productId === item.productId);\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity += item.quantity;\r\n      } else {\r\n        updatedCart.push(item);\r\n      }\r\n\r\n      await syncWithBackend(updatedCart);\r\n      setCart(updatedCart);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to add item');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      setLoading(true);\r\n      const updatedCart = cart.filter(item => item.productId !== productId);\r\n      await syncWithBackend(updatedCart);\r\n      setCart(updatedCart);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to remove item');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateQuantity = async (productId, newQuantity) => {\r\n    try {\r\n      setLoading(true);\r\n      const updatedCart = cart.map(item =>\r\n        item.productId === productId ? { ...item, quantity: newQuantity } : item\r\n      );\r\n      await syncWithBackend(updatedCart);\r\n      setCart(updatedCart);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to update quantity');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.delete(`/cart/clear/${userId}`);\r\n      setCart([]);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to clear cart');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const cartTotal = cart.reduce(\r\n    (total, item) => total + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  const cartCount = cart.reduce((count, item) => count + item.quantity, 0);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        cartTotal,\r\n        cartCount,\r\n        loading,\r\n        error,\r\n        fetchCart\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC1F,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,SAAS,GAAGf,WAAW,CAAC,YAAY;IACxC,IAAI;MACFY,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,SAASV,MAAM,EAAE,CAAC;MACnDG,OAAO,CAACM,QAAQ,CAACE,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC;MAClCL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZR,QAAQ,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACJ,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBT,KAAK,KAAI,qBAAqB,CAAC;IAC9D,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;EACAR,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,EAAE;MACVQ,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACR,MAAM,EAAEQ,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEzB,MAAMQ,eAAe,GAAG,MAAOC,WAAW,IAAK;IAC7C,IAAI;MACF,MAAMvB,KAAK,CAACwB,GAAG,CAAC,SAASlB,MAAM,EAAE,EAAE;QAAEY,KAAK,EAAEK;MAAY,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZM,OAAO,CAACb,KAAK,CAAC,mCAAmC,EAAEO,GAAG,CAAC;MACvD,MAAMA,GAAG;IACX;EACF,CAAC;EAED,MAAMO,SAAS,GAAG,MAAOC,IAAI,IAAK;IAChC,IAAI;MACFhB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMY,WAAW,GAAG,CAAC,GAAGf,IAAI,CAAC;MAC7B,MAAMoB,YAAY,GAAGL,WAAW,CAACM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,SAAS,KAAKJ,IAAI,CAACI,SAAS,CAAC;MAExF,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACI,QAAQ,IAAIL,IAAI,CAACK,QAAQ;MACxC,CAAC,MAAM;QACLT,WAAW,CAACU,IAAI,CAACN,IAAI,CAAC;MACxB;MAEA,MAAML,eAAe,CAACC,WAAW,CAAC;MAClCd,OAAO,CAACc,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOJ,GAAG,EAAE;MAAA,IAAAe,cAAA,EAAAC,mBAAA;MACZtB,QAAQ,CAAC,EAAAqB,cAAA,GAAAf,GAAG,CAACJ,QAAQ,cAAAmB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcjB,IAAI,cAAAkB,mBAAA,uBAAlBA,mBAAA,CAAoBvB,KAAK,KAAI,oBAAoB,CAAC;MAC3D,MAAMO,GAAG;IACX,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyB,cAAc,GAAG,MAAOL,SAAS,IAAK;IAC1C,IAAI;MACFpB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMY,WAAW,GAAGf,IAAI,CAAC6B,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACI,SAAS,KAAKA,SAAS,CAAC;MACrE,MAAMT,eAAe,CAACC,WAAW,CAAC;MAClCd,OAAO,CAACc,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOJ,GAAG,EAAE;MAAA,IAAAmB,cAAA,EAAAC,mBAAA;MACZ1B,QAAQ,CAAC,EAAAyB,cAAA,GAAAnB,GAAG,CAACJ,QAAQ,cAAAuB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcrB,IAAI,cAAAsB,mBAAA,uBAAlBA,mBAAA,CAAoB3B,KAAK,KAAI,uBAAuB,CAAC;MAC9D,MAAMO,GAAG;IACX,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM6B,cAAc,GAAG,MAAAA,CAAOT,SAAS,EAAEU,WAAW,KAAK;IACvD,IAAI;MACF9B,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMY,WAAW,GAAGf,IAAI,CAACkC,GAAG,CAACf,IAAI,IAC/BA,IAAI,CAACI,SAAS,KAAKA,SAAS,GAAG;QAAE,GAAGJ,IAAI;QAAEK,QAAQ,EAAES;MAAY,CAAC,GAAGd,IACtE,CAAC;MACD,MAAML,eAAe,CAACC,WAAW,CAAC;MAClCd,OAAO,CAACc,WAAW,CAAC;IACtB,CAAC,CAAC,OAAOJ,GAAG,EAAE;MAAA,IAAAwB,cAAA,EAAAC,mBAAA;MACZ/B,QAAQ,CAAC,EAAA8B,cAAA,GAAAxB,GAAG,CAACJ,QAAQ,cAAA4B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc1B,IAAI,cAAA2B,mBAAA,uBAAlBA,mBAAA,CAAoBhC,KAAK,KAAI,2BAA2B,CAAC;MAClE,MAAMO,GAAG;IACX,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFlC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMX,KAAK,CAAC8C,MAAM,CAAC,eAAexC,MAAM,EAAE,CAAC;MAC3CG,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,OAAOU,GAAG,EAAE;MAAA,IAAA4B,cAAA,EAAAC,mBAAA;MACZnC,QAAQ,CAAC,EAAAkC,cAAA,GAAA5B,GAAG,CAACJ,QAAQ,cAAAgC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc9B,IAAI,cAAA+B,mBAAA,uBAAlBA,mBAAA,CAAoBpC,KAAK,KAAI,sBAAsB,CAAC;MAC7D,MAAMO,GAAG;IACX,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsC,SAAS,GAAGzC,IAAI,CAAC0C,MAAM,CAC3B,CAACC,KAAK,EAAExB,IAAI,KAAKwB,KAAK,GAAGxB,IAAI,CAACyB,KAAK,GAAGzB,IAAI,CAACK,QAAQ,EACnD,CACF,CAAC;EAED,MAAMqB,SAAS,GAAG7C,IAAI,CAAC0C,MAAM,CAAC,CAACI,KAAK,EAAE3B,IAAI,KAAK2B,KAAK,GAAG3B,IAAI,CAACK,QAAQ,EAAE,CAAC,CAAC;EAExE,oBACE9B,OAAA,CAACC,WAAW,CAACoD,QAAQ;IACnBC,KAAK,EAAE;MACLhD,IAAI;MACJkB,SAAS;MACTU,cAAc;MACdI,cAAc;MACdK,SAAS;MACTI,SAAS;MACTI,SAAS;MACT3C,OAAO;MACPE,KAAK;MACLE;IACF,CAAE;IAAAT,QAAA,EAEDA;EAAQ;IAAAoD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrD,EAAA,CA7HWH,YAAY;AAAAyD,EAAA,GAAZzD,YAAY;AA+HzB,OAAO,MAAM0D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGnE,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAAC6D,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}