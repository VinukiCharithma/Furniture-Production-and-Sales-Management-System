{"ast":null,"code":"var _jsxFileName = \"E:\\\\SLIT\\\\Y2S2\\\\ITProject\\\\frontend\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = item => {\n    setCart(prevCart => {\n      // Check if item already exists in cart\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        // Update quantity if item exists\n        return prevCart.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + item.quantity\n        } : cartItem);\n      } else {\n        // Add new item to cart\n        return [...prevCart, item];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const cartTotal = cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      cartTotal,\n      cartCount: cart.reduce((count, item) => count + item.quantity, 0)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  return AuthContext(CartContext);\n};\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","item","prevCart","existingItem","find","cartItem","id","map","quantity","removeFromCart","productId","filter","updateQuantity","newQuantity","clearCart","cartTotal","reduce","total","price","Provider","value","cartCount","count","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","AuthContext","$RefreshReg$"],"sources":["E:/SLIT/Y2S2/ITProject/frontend/src/Context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const addToCart = (item) => {\r\n    setCart((prevCart) => {\r\n      // Check if item already exists in cart\r\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\r\n      \r\n      if (existingItem) {\r\n        // Update quantity if item exists\r\n        return prevCart.map(cartItem =>\r\n          cartItem.id === item.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + item.quantity }\r\n            : cartItem\r\n        );\r\n      } else {\r\n        // Add new item to cart\r\n        return [...prevCart, item];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart((prevCart) => prevCart.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const updateQuantity = (productId, newQuantity) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map(item =>\r\n        item.id === productId ? { ...item, quantity: newQuantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const cartTotal = cart.reduce(\r\n    (total, item) => total + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        removeFromCart,\r\n        updateQuantity,\r\n        clearCart,\r\n        cartTotal,\r\n        cartCount: cart.reduce((count, item) => count + item.quantity, 0),\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  return AuthContext(CartContext);\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,SAAS,GAAIC,IAAI,IAAK;IAC1BF,OAAO,CAAEG,QAAQ,IAAK;MACpB;MACA,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAEvE,IAAIH,YAAY,EAAE;QAChB;QACA,OAAOD,QAAQ,CAACK,GAAG,CAACF,QAAQ,IAC1BA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,GACnB;UAAE,GAAGD,QAAQ;UAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAGP,IAAI,CAACO;QAAS,CAAC,GAC5DH,QACN,CAAC;MACH,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGH,QAAQ,EAAED,IAAI,CAAC;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,cAAc,GAAIC,SAAS,IAAK;IACpCX,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACS,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKI,SAAS,CAAC,CAAC;EACvE,CAAC;EAED,MAAME,cAAc,GAAGA,CAACF,SAAS,EAAEG,WAAW,KAAK;IACjDd,OAAO,CAAEG,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAACN,IAAI,IACfA,IAAI,CAACK,EAAE,KAAKI,SAAS,GAAG;MAAE,GAAGT,IAAI;MAAEO,QAAQ,EAAEK;IAAY,CAAC,GAAGZ,IAC/D,CACF,CAAC;EACH,CAAC;EAED,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtBf,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMgB,SAAS,GAAGjB,IAAI,CAACkB,MAAM,CAC3B,CAACC,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,GAAGhB,IAAI,CAACiB,KAAK,GAAGjB,IAAI,CAACO,QAAQ,EACnD,CACF,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACyB,QAAQ;IACnBC,KAAK,EAAE;MACLtB,IAAI;MACJE,SAAS;MACTS,cAAc;MACdG,cAAc;MACdE,SAAS;MACTC,SAAS;MACTM,SAAS,EAAEvB,IAAI,CAACkB,MAAM,CAAC,CAACM,KAAK,EAAErB,IAAI,KAAKqB,KAAK,GAAGrB,IAAI,CAACO,QAAQ,EAAE,CAAC;IAClE,CAAE;IAAAZ,QAAA,EAEDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA1DWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA4DzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA,KAAM;EAC3B,OAAOC,WAAW,CAACnC,WAAW,CAAC;AACjC,CAAC;AAAC,IAAAiC,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}